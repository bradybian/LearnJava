package day1;
/*
 * 运算符
 * 位运算符：
 * 效率很高，但是可读性不好
 * 因为是基于二进制补码直接运算的
 * 
 * 左移：<<
 * 	运算规则： <<几位，就乘以2的几次方
 * 右移：>>
 *  运算规则： >>几位，就除以2的几次方
 *  		二进制补码右移n位，左边补0还是1，看最高位
 * 无符号右移：>>>
 * 按位与：&
 * 按位或： | 
 * 按位异或：^
 * 按位取反:~
 * 
 * 
 */
public class Test1_Bit {
	public static void main(String[] args) {
		/*
		 * 4的二进制 0000 0100
		 * 4 << 3   0 0100000
 		 */
		System.out.println(4 << 3);//等价于4乘以2的3次方，4*8 = 32
		
		/*
		 * 32的二进制 0010 0000
		 * 32 >> 4 0000 0010
		 */
		System.out.println(32 << 4);//等价于32除以2的4次方  32/16 =2
		
		/*
		 * -32二进制：
		 * 	原码：1010 0000
		 *  反码：1101 1111
		 *  补码: 1110 0000
		 *  -32 >> 4 1111 1110
		 *  补码: 1111 1110
		 *  反码：  1111 1101
		 *  原码: 1000 0010
		 *      
		 */
		System.out.println(-32 << 4);
		
		
	}

}
